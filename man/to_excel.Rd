% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_excel.R
\name{to_excel}
\alias{excel_workbook}
\alias{to_excel}
\alias{to_excel.data.frame}
\title{Pass data to Excel workbooks}
\usage{
to_excel(df, wb, ...)

excel_workbook()

\method{to_excel}{data.frame}(df, wb, title = " ", sheet = "tables",
  format = !is.null(title), append = TRUE, row = 1L, col = 1L, ...)
}
\arguments{
\item{df}{A \code{data.frame}, \code{table} or \code{matrix}.}

\item{wb}{A \code{Workbook}.}

\item{...}{Arguments passed to \code{to_excel.data.frame} (See below).}

\item{title}{The title to give to the table. Must be \code{NULL} if you do not
want the table to be formatted.}

\item{sheet}{The sheet you want to write the data to.}

\item{format}{Format values and apply the default template to the table output.}

\item{append}{Whether or not the function should append to or replace the
sheet before writing.}

\item{row}{Specify the startingrow when writing data to a new sheet.}

\item{col}{Start column. Same as for row.}
}
\description{
\code{to_excel} allows you to pass R objects (primarily a \code{data.frame}) to
an open \code{Workbook}, and write it later with \code{write_data}. The workbook
can be created by calling \code{excel_workbook}, which is itself a wrapper for
\code{\link[openxlsx]{createWorkbook}}.
}
\note{
This function requires \pkg{openxlsx}.
}
\examples{
if (require(openxlsx)) {
 wb <- excel_workbook()
 df <- data.frame("String" = c("A", "B"), "Int" = c(1:2L), "Percent" = c(0.5, 0.75))

 # The workbook is mutable, so we don't have to assign result.
 to_excel(df, wb, title = "Example data", sheet = "Example", append = FALSE)

 # Data is first argument, so we can use it with dplyr.
 # df \%>\% to_excel(wb, title = "Example dplyr", sheet = "Example", append = TRUE)

 # Save the data
 write_data(wb, "Example table.xlsx", overwrite = TRUE)
}
}
\author{
Kristian D. Olsen
}

